{
  "hash": "61274cb1f70e9c056924fdd90510e608",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Quarto Basics\"\nauthor: \"\"\nbibliography: ../../_bibliography/references.bib\njupyter: python3\nfreeze: true\norder: 3\n---\n\n# Introduction\n\nThis guide demonstrates how to create rich, interactive content using Quarto. Quarto is a powerful publishing system that allows you to combine narrative text, executable code, equations, figures, tables, and citations into beautiful documents.\n\nEach section below includes:\n\n  - **Code samples**\n  - **Rendered results** showing what the output looks like\n\nLet's explore the main features you'll need for academic and technical writing.\n\n# Text Formatting and Markdown Basics\n\n## Basic Text Formatting\n\nHere are the fundamental text formatting options:\n\n```markdown\n*italic text*,\n**bold text**,\n***bold italic text***\n~~strikethrough text~~\n`inline code`\nsuperscript^2^, subscript~2~\n```\n\n**Rendered result:**\n\n- *italic text*,\n- **bold text**,\n- ***bold italic text***\n- ~~strikethrough text~~\n- `inline code`\n- superscript^2^, subscript~2~\n\n## Headings and Structure\n\n```markdown\n# Main Heading (Level 1)\n## Section Heading (Level 2) \n### Subsection Heading (Level 3)\n#### Sub-subsection Heading (Level 4)\n```\n**Rendered result:**\n\n# Main Heading (Level 1)\n## Section Heading (Level 2) \n### Subsection Heading (Level 3)\n#### Sub-subsection Heading (Level 4)\n\n## Lists\n\n### Unordered Lists\n```markdown\n* First item\n  + Sub-item 1\n  + Sub-item 2\n    - Sub-sub-item\n* Second item\n```\n\n**Rendered result:**\n\n* First item\n  + Sub-item 1\n  + Sub-item 2\n    - Sub-sub-item\n* Second item\n\n### Ordered Lists\n```markdown\n1. First numbered item\n2. Second numbered item\n   i. Sub-item with roman numerals\n   ii. Another sub-item\n```\n\n**Rendered result:**\n\n1. First numbered item\n2. Second numbered item\n   i. Sub-item with roman numerals\n   ii. Another sub-item\n\n# Mathematical Equations {#sec-equations}\n\n## Inline Math\n\nYou can include mathematical expressions inline using single dollar signs:\n\n- `$E = mc^2` =>  $E = mc^2$\n- `$\\alpha + \\beta = \\gamma$` => $\\alpha + \\beta = \\gamma$.\n\n## Display Equations\n\nFor larger equations, use double dollar signs:\n\n```markdown\n$$\n\\frac{\\partial^2 u}{\\partial t^2} = c^2 \\nabla^2 u\n$$ {#eq-wave}\n```\n\n$$\n\\frac{\\partial^2 u}{\\partial t^2} = c^2 \\nabla^2 u\n$$ {#eq-wave}\n\n```markdown\n$$\nP(X = k) = \\frac{\\lambda^k e^{-\\lambda}}{k!}\n$$ {#eq-poisson}\n```\n\n$$\nP(X = k) = \\frac{\\lambda^k e^{-\\lambda}}{k!}\n$$ {#eq-poisson}\n\n## Multi-line Equations\n\n```markdown\n$$\n\\begin{align}\nf(x) &= ax^2 + bx + c \\\\\nf'(x) &= 2ax + b \\\\\nf''(x) &= 2a\n\\end{align}\n$$ {#eq-derivatives}\n```\nThe `{#eq-derivatives}` is used to reference the equation in the text (see [Cross-References](#sec-crossref)).\n\n**Rendered result:**\n$$\n\\begin{align}\nf(x) &= ax^2 + bx + c \\\\\nf'(x) &= 2ax + b \\\\\nf''(x) &= 2a\n\\end{align}\n$$ {#eq-derivatives}\n\n# Figures and Images {#sec-figures}\n\n## Static Images\n\nYou can include static images using markdown syntax:\n\n```markdown\n![Quarto Logo](../../assets/img/Logo_colib.svg){#fig-logo fig-alt=\"The Colib project logo\" width=\"200px\"}\n```\n\n**Rendered result:**\n\n![Quarto Logo](../../assets/img/Logo_colib.svg){#fig-logo fig-alt=\"The Colib project logo\" width=\"200px\"}\n\n# Cross-References {#sec-crossref}\n\n## How Cross-References Work\n\nQuarto automatically generates numbered cross-references for:\n\n- **Equations**: Use `eq-` prefix (e.g., `#eq-wave`)\n- **Sections**: Use `sec-` prefix (e.g., `#sec-figures`)\n- **Figures**: Use `fig-` prefix (e.g., `#fig-logo`)\n- **Tables**: Use `tbl-` prefix (e.g., `#tbl-features`)\n\n## Examples of Cross-References\n\n```markdown\n- Reference an equation: \"Using the wave equation (@eq-wave)...\"\n- Reference a section: \"Details are provided in @sec-figures...\"\n- Reference a figure: \"See @fig-logo for the Colib project logo...\"\n- Reference a table: \"The results in @tbl-features indicate...\"\n```\n\n- Reference an equation: \"Using the wave equation (@eq-wave)...\"\n- Reference a section: \"Details are provided in @sec-figures...\"\n- Reference a figure: \"See @fig-logo for the Colib project logo...\"\n- Reference a table: \"The results in @tbl-features indicate...\"\n\n# Citations and References {#sec-citations}\n\n## Citation Syntax\n\nQuarto uses BibTeX for managing references. Citations are created using `@` followed by the citation key:\n\n- Author-date citation: `@marrero2019` produces: Studies by @DUMMY:2 show...\n- Parenthetical citation: `[@marrero2019]` produces: Previous research [@DUMMY:2] indicates...\n\n## Adding References\n\nReferences should be stored in a `.bib` files and specified in the YAML header. You can specify multiple files by adding them to the `bibliography` list:\n\n```yaml\nbibliography: \n  - references.bib\n  - references_2.bib\n```\n\n## Example Bibliography Entry\n\n```bibtex\n@article{example2024,\n  title={An Example Article},\n  author={Smith, John and Doe, Jane},\n  journal={Journal of Examples},\n  volume={42},\n  number={1},\n  pages={1--10},\n  year={2024},\n  publisher={Example Press}\n}\n```\n\n# Advanced Features {#sec-advanced}\n\n## Callout Blocks\n\nQuarto provides several types of callout blocks:\n\n:::{.callout-note}\nThis is a note callout. Use it for additional information.\n:::\n\n:::{.callout-tip}\nThis is a tip callout. Perfect for helpful suggestions.\n:::\n\n:::{.callout-warning}\nThis is a warning callout. Use for important caveats.\n:::\n\n:::{.callout-important}\nThis is an important callout. Use for critical information.\n:::\n\n## Source code\n\nUse ``` to delimit blocks of source code and a language to syntax highlight code blocks.\n\nQuarto can provide syntax highlighting for over 140 different languages (see the output of `quarto pandoc --list-highlight-languages` for a list of all of them).\n\n````markdown\n```python\n#| label: fig-polar\n#| fig-cap: \"A line plot on a polar axis\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\n```\n````\n\n**Rendered result:**\n\n```python\n#| label: fig-polar\n#| fig-cap: \"A line plot on a polar axis\"\n\nimport numpy as np\n```python\n#| label: fig-polar\n#| fig-cap: \"A line plot on a polar axis\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\n```\n\n## Code Blocks computation\n\nCode blocks that use braces around the language name (e.g. ` ```{python}`) are executable, and will be run by Quarto during render. Supported languages for execution are:\n\n- Python\n- R\n- Julia\n- Observable JS\n\nYou will find below a simple example. This example make use of the `matplotlib` and `plotly` Python packages to create a line plot on a polar axis, therefore they need to be installed before running the code block.\n\n```markdown\n---\ntitle: \"matplotlib demo\"\nformat:\n  html:\n    code-fold: true\njupyter: python3\n---\n\nFor a demonstration of a line plot on a polar axis, see @fig-polar.\n\n::: {#cell-fig-polar .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![A line plot on a polar axis](index_files/figure-html/fig-polar-output-1.png){#fig-polar width=450 height=439}\n:::\n:::\n\n\n# Tables {#sec-tables}\n\n## Markdown Tables\n\nYou can create tables using markdown syntax:\n\n```markdown\n| Feature | Supported | Notes |\n|---------|-----------|-------|\n| Code execution | ✓ | Python, R, Julia |\n| Math equations | ✓ | LaTeX syntax |\n| Cross-references | ✓ | Figures, tables, sections |\n| Citations | ✓ | BibTeX format |\n```\n\n**Rendered result:**\n\n| Feature | Supported | Notes |\n|---------|-----------|-------|\n| Code execution | ✓ | Python, R, Julia |\n| Math equations | ✓ | LaTeX syntax |\n| Cross-references | ✓ | Figures, tables, sections |\n| Citations | ✓ | BibTeX format |\n\n: Quarto features overview {#tbl-features}\n\n## Tables from Code\n\n**Code sample:**\n```python\n#| label: tbl-data\n#| tbl-cap: \"Sample data analysis results\"\n\nimport pandas as pd\n\n# Create sample data\ndata = {\n    'Method': ['Linear', 'Quadratic', 'Exponential', 'Logarithmic'],\n    'R²': [0.65, 0.89, 0.94, 0.72],\n    'RMSE': [2.3, 1.1, 0.8, 1.9],\n    'Status': ['Fair', 'Good', 'Excellent', 'Good']\n}\n\ndf = pd.DataFrame(data)\nprint(df.to_string(index=False))\n```\n\n**Example output:**\n```\n      Method   R²  RMSE    Status\n      Linear 0.65   2.3      Fair\n   Quadratic 0.89   1.1      Good\n Exponential 0.94   0.8 Excellent\n Logarithmic 0.72   1.9      Good\n```\n\n# References\n\n::: {#refs}\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}